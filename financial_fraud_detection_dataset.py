# -*- coding: utf-8 -*-
"""financial_fraud_detection_dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ibtl6g6F7y3pQ51fTdiv5-2WlEHG_0Vo

#financial_fraud_detection_dataset
"""

# Importar librer√≠as
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

fraude_df = pd.read_csv('financial_fraud_detection_dataset.csv')

fraude_df

fraude_df.info()

"""###**Traducci√≥n del encabezado de las columnas**"""

#renombrando columnas
fraude_df.rename(columns={
'transaction_id': 'ID de transacci√≥n',
'timestamp':  'fecha y hora',
'sender_account':	'cuenta emisora',
'receiver_account':'cuenta receptora',
'amount':'monto',
'transaction_type':'tipo de transacci√≥n',
'merchant_category':	'categor√≠a de comerciante',
'location':	'ubicaci√≥n',
'device_used':	'dispositivo utilizado',
'is_fraud':	'es fraude (s√≠/no)',
'fraud_type':	'tipo de fraude',
'time_since_last_transaction':	'tiempo desde la √∫ltima transacci√≥n',
'spending_deviation_score':	'puntuaci√≥n de desviaci√≥n de gasto',
'velocity_score':	'puntuaci√≥n de velocidad (de transacciones)',
'geo_anomaly_score':	'puntuaci√≥n de anomal√≠a geogr√°fica',
'payment_channel':	'canal de pago',
'ip_address':	'direcci√≥n IP',
'device_hash':	'huella digital del dispositivo'
}, inplace=True)

# Configuraci√≥n visual
sns.set(style="whitegrid")
plt.rcParams['figure.figsize'] = (12, 6)

# --- Parte 1: Exploraci√≥n b√°sica ---
print("\n--- Resumen de columnas ---")
print(fraude_df.info())

print("\n--- Primeras filas ---")
print(fraude_df.head())

print("\n--- Transacciones totales y fraudulentas ---")
print(fraude_df["es fraude (s√≠/no)"].value_counts())

print("\n--- Valores nulos ---")
print(fraude_df.isnull().sum())

# --- Parte 2: Estad√≠sticas con NumPy ---
amount_mean = np.mean(fraude_df["monto"])
amount_std = np.std(fraude_df["monto"])
print(f"\nMonto promedio: {amount_mean:.2f}, Desviaci√≥n est√°ndar: {amount_std:.2f}")

fraud_amount_mean = fraude_df[fraude_df["es fraude (s√≠/no)"] == True]["monto"].mean()
nonfraud_amount_mean = fraude_df[fraude_df["es fraude (s√≠/no)"] == False]["monto"].mean()
print(f"Monto promedio FRAUDE: {fraud_amount_mean:.2f}, NO FRAUDE: {nonfraud_amount_mean:.2f}")

"""¬øQu√© significa esto?

   amount_mean: Es el monto promedio de todas las transacciones en el dataset.

        Por ejemplo: si ves Monto promedio: 456.72, significa que en promedio, las transacciones tienen un valor de 456.72 unidades monetarias.

   amount_std: Es la desviaci√≥n est√°ndar del monto, que indica cu√°nto var√≠an los montos respecto al promedio.

        Si la desviaci√≥n est√°ndar es alta (por ejemplo, 1200.56), quiere decir que hay mucha diferencia entre los montos: algunas transacciones pueden ser muy peque√±as y otras muy grandes.

  ¬øC√≥mo interpretarlo?

   Monto promedio bajo + desviaci√≥n est√°ndar alta ‚Üí Hay muchas transacciones peque√±as y unas pocas muy grandes (posiblemente an√≥malas).

   Monto promedio alto + desviaci√≥n est√°ndar baja ‚Üí Las transacciones son consistentemente grandes y estables.

   Puedes comparar estos valores con los de transacciones fraudulentas vs no fraudulentas para detectar patrones de riesgo.


"""

# --- Parte 3: Visualizaciones ---
# Histograma de montos por tipo de transacci√≥n
plt.figure()
sns.histplot(data=fraude_df, x="monto", hue="es fraude (s√≠/no)", bins=50, log_scale=(True, False), kde=True)
plt.title("Distribuci√≥n de montos por tipo de transacci√≥n")
plt.xlabel("Monto")
plt.ylabel("Frecuencia")
plt.legend(title="¬øEs fraude?", labels=["No", "S√≠"])
plt.show()

"""  ¬øQu√© muestra el gr√°fico?

   Eje X: Monto de la transacci√≥n (amount)

   Eje Y: Frecuencia (cantidad de transacciones que tienen ese rango de monto)

   Color:

        Un color representa las transacciones no fraudulentas

        Otro color representa las fraudulentas

     hue="is_fraud": Separa los datos por si son fraudes o no.

     log_scale=(True, False): Escala logar√≠tmica en el eje X para manejar la gran variaci√≥n de montos (√∫til si hay muchos valores peque√±os y pocos muy grandes).

     kde=True: A√±ade una l√≠nea de densidad (curva suavizada) encima del histograma.

  ¬øC√≥mo interpretarlo?

   Si los fraudes se concentran en un rango espec√≠fico de montos, lo ver√°s como un pico del color de "fraude" en una zona espec√≠fica del eje X.

   Si las transacciones leg√≠timas est√°n m√°s distribuidas y los fraudes m√°s concentrados, puede ser una se√±al √∫til para detectar patrones.

   Si la curva KDE de fraudes tiene una forma distinta a la de no fraudes, puedes usarlo como insight para un modelo predictivo.

  Ejemplo de interpretaci√≥n:

   Si ves que los fraudes ocurren con mayor frecuencia en montos entre $1,000 y $5,000, mientras que las transacciones leg√≠timas son mayormente peque√±as, entonces ese rango se vuelve sospechoso.


"""

# Boxplot de spending_deviation_score
plt.figure()
sns.boxplot(data=fraude_df, x="es fraude (s√≠/no)", y="puntuaci√≥n de desviaci√≥n de gasto")
plt.title("Puntuaci√≥n de desviaci√≥n de gasto por tipo de transacci√≥n")
plt.xlabel("¬øEs fraude?")
plt.ylabel("puntuaci√≥n de desviaci√≥n de gasto")
plt.xticks([0, 1], ["No", "S√≠"])
plt.show()

"""Es un diagrama de caja (boxplot) que compara el spending_deviation_score entre transacciones fraudulentas y no fraudulentas.
  ¬øQu√© muestra este boxplot?

Cada caja resume la distribuci√≥n del spending_deviation_score (una medida de cu√°nto se desv√≠a el gasto de lo habitual) seg√∫n si la transacci√≥n es fraude (S√≠) o no lo es (No).

   L√≠nea central (dentro de la caja): Mediana del score.

   Bordes de la caja: Primer y tercer cuartil (Q1 y Q3).

   Bigotes (whiskers): Extienden hasta valores razonables (dentro de 1.5 √ó rango intercuart√≠lico).

   Puntos fuera de los bigotes: Outliers o valores at√≠picos.

 ¬øC√≥mo interpretarlo?

   Si las cajas de fraudes y no fraudes son visiblemente diferentes en altura, posici√≥n o rango, el score spending_deviation_score es √∫til para distinguir entre ambos casos.

     Por ejemplo:

        Si las transacciones fraudulentas tienen una mediana m√°s alta o m√°s baja que las no fraudulentas,

        O si tienen m√°s outliers extremos,

        Entonces esta variable puede ser importante en un modelo de detecci√≥n de fraudes.


"""

# Heatmap de correlaciones
plt.figure()
cols = ["monto", "puntuaci√≥n de desviaci√≥n de gasto", "puntuaci√≥n de velocidad (de transacciones)", "puntuaci√≥n de anomal√≠a geogr√°fica"]
correlation = fraude_df[cols].corr()
sns.heatmap(correlation, annot=True, cmap="coolwarm")
plt.title("Correlaciones entre variables num√©ricas")
plt.show()

"""üìä Significado del gr√°fico:

Este mapa de calor (heatmap) muestra c√≥mo est√°n relacionadas las variables num√©ricas seleccionadas entre s√≠, mediante la correlaci√≥n de Pearson, que mide la fuerza y direcci√≥n de una relaci√≥n lineal.
üî¢ Valores posibles de correlaci√≥n:

  +1 ‚Üí correlaci√≥n positiva perfecta (cuando una sube, la otra tambi√©n).

  0 ‚Üí sin relaci√≥n lineal.

   ‚Äì1 ‚Üí correlaci√≥n negativa perfecta (cuando una sube, la otra baja).

   ¬øC√≥mo interpretar este heatmap?

     Cada celda muestra el valor de correlaci√≥n entre dos variables.

     El color indica la intensidad:

        üî¥ rojo = correlaci√≥n positiva fuerte

        üîµ azul = correlaci√≥n negativa fuerte

        ‚ö™ blanco = d√©bil o nula

     annot=True permite ver los n√∫meros exactos.

 Ejemplo pr√°ctico (sup√≥n que ves esto):
	 amount	spending_deviation_score	velocity_score	geo_anomaly_score
 amount	1.00	0.25	0.05	0.02
spending_deviation	0.25	1.00	0.65	-0.10
velocity_score	0.05	0.65	1.00	-0.30
geo_anomaly_score	0.02	-0.10	-0.30	1.00
Interpretaci√≥n:

     spending_deviation_score y velocity_score est√°n moderadamente correlacionados (0.65): cuando alguien se desv√≠a mucho del gasto normal, tambi√©n suele hacer transacciones m√°s r√°pidas o inusuales.

     geo_anomaly_score tiene correlaci√≥n negativa d√©bil con los dem√°s: su comportamiento es algo independiente.

     amount no est√° muy correlacionado con ninguna otra variable ‚áí el monto por s√≠ solo no predice bien estos scores.

  ¬øPor qu√© es √∫til?

     Te ayuda a detectar relaciones entre variables que podr√≠an causar multicolinealidad si usas modelos como regresi√≥n.

     Puedes descubrir nuevas combinaciones √∫tiles para detecci√≥n de fraudes.


"""

# --- Parte 4: An√°lisis por categor√≠as ---
# Categor√≠a con m√°s fraudes
print("\n--- Fraudes por categor√≠a de comercio ---")
print(fraude_df[fraude_df["es fraude (s√≠/no)"] == True]["categor√≠a de comerciante"].value_counts().head())

""" ¬øQu√© hace este bloque de c√≥digo?

Este c√≥digo analiza el campo merchant_category (categor√≠a del comercio) √∫nicamente para las transacciones fraudulentas (is_fraud == True) y muestra las categor√≠as donde ocurrieron m√°s fraudes.
  ¬øQu√© significa?

   Te dice en qu√© tipo de comercios (por ejemplo, online, grocery, utilities, etc.) ocurre con m√°s frecuencia el fraude.

   El m√©todo .value_counts().head() ordena de mayor a menor y muestra las 5 categor√≠as principales.

  Ejemplo de salida posible:

--- Fraudes por categor√≠a de comercio ---
online       5340
grocery      4890
utilities    3125
retail       2784
restaurant   2541
Name: merchant_category, dtype: int64

  Esto nos dice que:

     La mayor√≠a de fraudes ocurrieron en la categor√≠a online, seguida por grocery (tiendas de abarrotes), etc.

     Esto puede indicar que ciertos tipos de comercio son m√°s vulnerables al fraude (como pagos en l√≠nea).

  ¬øPor qu√© es √∫til?

     Puedes enfocar la vigilancia o medidas antifraude en esas categor√≠as.

     Puede alimentar un modelo de detecci√≥n de fraudes (como variable categ√≥rica con peso).

     Sirve para presentar hallazgos a √°reas de seguridad, compliance o negocio.


"""

# Gr√°fico de barras: categor√≠as con m√°s fraudes
plt.figure()
fraud_categories = fraude_df[fraude_df["es fraude (s√≠/no)"] == True]["categor√≠a de comerciante"].value_counts().head(10)
sns.barplot(x=fraud_categories.values, y=fraud_categories.index, palette="Reds_r")
plt.title("Top 10 categor√≠as con m√°s fraudes")
plt.xlabel("Cantidad de fraudes")
plt.ylabel("Categor√≠a de comercio")
plt.show()

""" Qu√© aporta este gr√°fico?

     Visualiza de forma clara en qu√© tipos de comercios ocurren m√°s fraudes.

     Es √∫til para presentaciones, an√°lisis de riesgo o priorizaci√≥n de medidas antifraude.


"""

# Dispositivo m√°s com√∫n en fraudes
print("\n--- Fraudes por dispositivo usado ---")
print(fraude_df[fraude_df["es fraude (s√≠/no)"] == True]["dispositivo utilizado"].value_counts())

# Ubicaciones con m√°s fraudes
print("\n--- Fraudes por ubicaci√≥n ---")
print(fraude_df[fraude_df["es fraude (s√≠/no)"] == True]["ubicaci√≥n"].value_counts().head())

# --- Extra: Scatter plot con color por fraude ---
plt.figure()
sns.scatterplot(
    data=fraude_df.sample(5000),
    x="puntuaci√≥n de velocidad (de transacciones)",
    y="puntuaci√≥n de desviaci√≥n de gasto",
    hue="es fraude (s√≠/no)",
    alpha=0.7)

"""üìä ¬øQu√© tipo de gr√°fico es?

Es un scatter plot (diagrama de dispersi√≥n), donde:

     Cada punto representa una transacci√≥n.

     Se grafican 5000 muestras aleatorias para no saturar el gr√°fico.

     El color del punto indica si la transacci√≥n fue fraudulenta (is_fraud=True) o no (is_fraud=False).

     El eje X representa el velocity_score (qu√© tan r√°pido o frecuente es el comportamiento).

     El eje Y muestra el spending_deviation_score (cu√°nto se desv√≠a el gasto de lo habitual).

   ¬øC√≥mo interpretar el gr√°fico?

     Los puntos se agrupan en zonas del gr√°fico seg√∫n los patrones de comportamiento.

     Si ves que los fraudes (probablemente en rojo o naranja) tienden a concentrarse en una regi√≥n espec√≠fica del gr√°fico, por ejemplo en valores altos de velocity_score y spending_deviation_score, eso sugiere que las transacciones r√°pidas y con gasto inusual son m√°s propensas al fraude.

     Si no hay una separaci√≥n clara, eso indica que estos dos scores por s√≠ solos no bastan para diferenciar fraudes ‚Äî pero podr√≠an ser √∫tiles como parte de un modelo m√°s complejo.

   ¬øPara qu√© sirve este gr√°fico?

     Ayuda a visualizar relaciones no lineales entre variables num√©ricas.

     Es √∫til para detectar patrones de fraude visualmente.

     Tambi√©n puede ayudarte a decidir si incluir estas variables en un modelo de clasificaci√≥n.


"""

# Scatter plot con limpieza previa
df_clean = fraude_df[["puntuaci√≥n de velocidad (de transacciones)", "puntuaci√≥n de desviaci√≥n de gasto", "es fraude (s√≠/no)"]].dropna()
plt.figure()
sns.scatterplot(
    data=df_clean.sample(5000),
    x="puntuaci√≥n de velocidad (de transacciones)",
    y="puntuaci√≥n de desviaci√≥n de gasto",
    hue="es fraude (s√≠/no)",
    alpha=0.6,
    palette={False: "blue", True: "red"}
)
plt.title("Velocidad vs Desviaci√≥n de Gasto")
plt.xlabel("puntuaci√≥n de velocidad (de transacciones)")
plt.ylabel("puntuaci√≥n de desviaci√≥n de gasto")
plt.legend(title="¬øEs fraude?", labels=["No", "S√≠"])
plt.show()

"""Este gr√°fico de dispersi√≥n (scatter plot) que aparece en la secci√≥n Extra: Scatter plot con color por fraude tiene como objetivo visualizar la relaci√≥n entre dos variables num√©ricas y su relaci√≥n con el fraude:

  Interpretaci√≥n:

     Eje X (velocity_score): mide la rapidez o frecuencia de las transacciones en un per√≠odo de tiempo. Valores m√°s altos indican actividad inusualmente r√°pida.

     Eje Y (spending_deviation_score): indica cu√°nto se desv√≠a el gasto actual respecto al comportamiento esperado. Valores altos (positivos o negativos) pueden ser se√±al de comportamiento at√≠pico.

     Color del punto (hue="is_fraud"):

         üîµ Azul: transacciones no fraudulentas

         üî¥ Rojo: transacciones fraudulentas

  ¬øQu√© puedes descubrir?

     Si los puntos rojos (fraudes) se agrupan en una regi√≥n espec√≠fica del gr√°fico (por ejemplo, alto velocity_score y alto spending_deviation_score), eso indica que ciertos patrones de comportamiento est√°n asociados al fraude.

     Si los colores est√°n mezclados sin un patr√≥n claro, significa que estas dos variables por s√≠ solas no son suficientes para identificar fraudes, pero a√∫n pueden ser √∫tiles dentro de un modelo de detecci√≥n m√°s completo.

  ¬øPor qu√© es √∫til este gr√°fico?

     Es una herramienta de an√°lisis exploratorio para identificar patrones sospechosos.

     Puede ayudarte a decidir qu√© variables incluir en un modelo de machine learning.

     Sirve como apoyo visual para entender el comportamiento de usuarios normales vs. fraudulentos.


"""